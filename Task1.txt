1. Тестирование ПО - процесс исследования програмного продукта с целью проверки соответствия между фактическим и ожидаемым результатом на конечном наборе тестов

2. Качество ПО - способность програмного продукта при заданных условиях удовлетворять установленным и предполагаемым потребностям

3. Когда начинать и заканчивать тестирование:
    Начинать следует, как только это возможно.
        - тестирование может начинаться до фактического получения ПО (статическое тестирование), что действительно немаловажно, так как снижает сложность провождения динамической стадии тестирования. Бытует мнение, что многие ошибки, которые найдены в стадии динамического тестирования, могли и должны были зафиксированные в стадии статического тестирования;
        - Тестирование на ранних стадиях (изучение требований, спецификаций) позволяет тестировщику узнать больше о ПО и обнаружить логические или технические ошибки, которые могут повлиять на ПО, его качество и стоимость
        - в свою очередь, чем раньше обнаруживается ошибка, тем дешевле она стоит компании.

    Когда следует заканчивать тестирование:
        - Это уже управленческое решение, которое скореее всего будет принято на основе покрытий тестами, анализ рисков, отведенный график на тестирование

4. Какие знаете цели тестирования программного обеспечения?
    - Обеспечить очистку ПО от ошибок. Надо сделать все возможное, чтобы очевидные ошибки были выявлены и исправлены
    - Убедиться, что ПО отвечает требованиям и спецификации
    - Обеспечить уверенность в ПО пользователям, заказчику

5. Quality Assurance- это комплекс мероприятий, который охватывает все этапы разработки, выпуска и эксплуатации ПО для обеспечения требуемого
    уровня качества выпускаемого продукта

6. Quality Control - это совокупность действий, проводимые над ПО в процессе разработки для оценки состояния продукта, готовности его к выпуску
    и соответствие требованиям и качеству к этому продукту

7. Тестирование - это способ проверки, выполняет ли программа или отдельные ее компоненты предназначение для которого они разрабатывались

8. Какие знаете принципы тестирования?
    - Исчерпывающее тестирование невозможно
    - Тестирование показывает наличие дефектов, но не их отсутствие
    - Заблуждение об отсутствии ошибок
    - Раннее тестирование сохраняет время и деньги
    - Кластеризация дефектов (Наибольшее количество дефектов содержится в небольшом количестве модулей)
    - Тестирование зависит от контекста. Для разного софта разные подходы.
        - по типу (web, mobile, desktop)
        - по цели (безопасность, game, продажи)
        - по срокам (как часто выходят релизы, время на их подготовку)
        - по ожидаемому уровню качества
        - по доступным инструментам - что есть на проекте для успешной реализации
    - Парадокс пестицида

9. Верификация - отвечает на вопрос, строим ли мы правильно продукт
    этот процесс выполняется для того, чтобы убедиться, что каждый этап жизненного цикла разработки ПО(разработка, тестирование) строится
    на основе спецификаций, требований без отклонений
    Верификация - доказанное результатами исследования того, что определенные требования были выполнены

    Мероприятия верификации:
        - анализ аспектов тестирования (сроки, персонал, стоимость, инструменты тестирования)
        - Рецензирование - оценка состояния продукта или проекта с целью установления расхождений с запланированными результатами и предложений идей

10. Валидация - отвечает на вопрос, строим ли правильный продукт. Это процесс, позволяющий тестировщику оценить ПО после стадии разработки до передачи
     его заказчику. В этом процессе мы должны убедиться, что ПО разработано на основе потребностей пользователей. Тут динамическое тестирование

11. Перечислите характеристики качества программного обеспечения и их атрибуты.
     - Функциональность. Степень, в которой ПО выполняет основные функции, т.е решает те задачи, для которых они были созданы.
        - функциональная полнота
        - функциональная правильность
        - функциональная целесообразность

     - Эффективность - эта характеристика позволяет определить производительность ПО, например как быстро обрабатываются запросы пользователей
        - поведение в зависимости от времени
        - вместимость — степень, определяющая предельные показатели системы, которые должны быть описаны в требованиях

    - Надежность - степень в которой ПО в определенных условиях и в течении определенного времени выполняет свои функции или способность
        к быстрому восстановлению после сбоя
        - завершённость — степень, в которой система, продукт или компонент удовлетворяют потребности в надёжности при нормальной работе
        - доступность — степень работоспособности и доступности системы, продукта или компонента, когда это необходимо для использования
        - отказоустойчивость — степень, в которой ПО работают как предполагалось, несмотря на наличие аппаратных или программных сбоев
        - восстанавливаемость

    - Удобство использования - степень в которой ПО используется для эффективного достижения целей пользователя
        - узнаваемость — степень, в которой пользователи могут распознать, соответствует ли продукт или система их потребностям
        - работоспособность — степень, в которой продукт или система имеют атрибуты, облегчающие управление и контроль
        - эстетика пользовательского интерфейса — степень, в которой интерфейс позволяет приятное взаимодействие для пользователя
        - защита пользователя от ошибок — степень, в которой система защищает пользователей от ошибок

    - Поддерживаемость - как приложение адаптируется к изменениям
        - модульность — степень, в которой система состоит из отдельных компонентов, так что изменение одного оказывает минимальное влияние на другие
        - модифицируемость — степень, в которой продукт или система могут быть эффективно и действенно модифицированы без внесения дефектов или ухудшения качества существующего продукта
        - тестируемость — степень эффективности и результативности, с которой могут быть установлены критерии тестирования для системы, продукта или компонента и могут быть выполнены тесты

    - Переносимость - Степень эффективности и результативности, с которой ПО могут быть перенесены из одного окружения в другое
        - адаптивность
        - простота и лёгкость установки

    - Безопасность - Степень, в которой продукт или система защищают информацию и данные таким образом, чтобы лица или другие системы имели степень доступа к данным, соответствующую их типам и уровням авторизации
        - конфиденциальность — степень, в которой продукт или система гарантируют, что данные получат только те, кому разрешён к ним доступ
        - ответственность — степень, в которой действия объекта могут быть однозначно прослежены и определены ответственные лица

    - Совместимость - Степень, в которой продукт, система или компонент могут обмениваться информацией с другими продуктами, системами или компонентами и (или) выполнять требуемые функции, совместно используя ту же аппаратную или программную среду
