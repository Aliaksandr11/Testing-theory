1. Что такое проект?
   Проект - это временное предприятие, направленное на создание продукта или услуги. Временное, так как есть начало и конец проекта или  его фазы

2. Из каких этапов состоит Waterfall model/Каскадная модель?
    - Составление требований
    - Анализ требований
    - Проектирование
    - Разработка
    - Тестирование
    - Внедрение
    - Поддержка

3. Какие преимущества и недостатки Waterfall model/Каскадной модели?
   Преимущества:
    - Понятно, что и как делать. Есть ТЗ которого придерживается комманда. Для каждого жтапа создается документация
    - Подходит крапным проектам, где важно контролировать бюджет. Перед стартом просчитывается стоимость и сроки выполнения работы
    - Заказчик не учавствует на каждом этапе разработки
    
   Недостатки:
    - Отсутствие гибкости. Если на каком-то этапе что-то пойдет не так, изменятся требования или что-то не учли, то нужно начинать сначала
    - Высокие риски. Не предусматриваются изменения на поздних этапах разработки. Если изменения придется вносить, то могут сорваться сроки
    - Бюджет жестко ограничен и исполнитель отвечает за него
    - Не подойдет для проектов, где быстро меняются требования
   
4. Из каких этапов состоит V-model/V- модель?
   Это усовершенствованная каскадная модель, в которой заказчик с командой программистов одновременно составляют требования к системе и описывают, как будут тестировать её на каждом этапе
    - Составление Бизнес требований              
    - Функциональные требования
    - Дизайн
    - Разработка
    - модульное тестирование
    - Интеграционное
    - Функциональное
    - Приемочное

5. Когда использовать V-model/V- модель:
   V-модель подходит для проектов, в которых важна надёжность и цена ошибки очень высока
   
6. Из каких этапов состоит Iterative model/Итеративная модель?
   Итерационная модель жизненного цикла не требует для начала полной спецификации требований. Вместо этого, создание начинается с реализации части функционала, становящейся базой для определения дальнейших требований. Этот процесс повторяется 
    - Фаза требований
    - Фаза дизайна
    - Фаза внедрения и тестирования
    - Оценка качества
    
7. Когда использовать Iterative model/Итеративной модели?
    - Требования к конечной системе заранее четко определены и понятны.
    - Проект большой или очень большой.

8. Плюсы и минусы Iterative model/Итеративной модели:
   Плюсы:
    - Гибкость
    - Раннее обнаружение ошибок
    
   Минусы:
    - Потенциальное неконтролируемое расширение проекта
    - Сложность мониторинга
    
9. Agile - это гибкий подход в управлении проектом по разработке ПО, который часто применяется в небольших командах. Для такого подхода харак-
   терны короткие итерации(2-3 недели) и работа с серией задач: анализ, проектирование, разработка, тестирование. После каждой итерации анализ

10. Agile манифест - это документ, содержащий описание ценностей и принципов гибкой разработки ПО

11. Какие ценности Agile манифест:
     - Люди и взаимодействие важнее процессов и инструментов
     - Работающий продукт важнее исчерпывающей документации
     - Сотрудничество с заказчиком важнее согласований условия контракта
     - Готовность к изменения важнее, чем следовать первоначальному плану

12. Основные принципы Agile манифест:
     - Приоритет комманды проекта - удовлетворение потребностей заказчика с помощью своевременной поставки качественного продукта
     - Изменение требований продукта приветствуется даже на поздних стадиях разработки
     - Промежуточный рабочий продукт следует показывать заказчику как можно чаще
     - Над проектом должны работать мотивированные специалисты. Для этого надо создать все необходимые условия
     - Личное общение - самый эфективный способ обмена информации между командой
     - Работающий продукт - основной показатель прогресса
     - Процессы в Agile должны быть настроены так, чтобы проект развивался устойчиво. Заказчики, разработчики и пользователи должны быть готовы к тому, что изменения будут вноситься равномерно.
     - Постоянное внимание к техническому совершенству продукта и качеству проектирования повышает гибкость проекта
     - Не стоит переусложнять проект, лишние процессы нужно свести к минимуму
     - Лучшие продукты рождаются у команд, которые умеют работать самоорганизовано
     - Команда должна постоянно искать способы работать эффективнее
     
13. Scrum - это фреймворк для разработки проекта, который помогает правильно приоритезировать задачи и работу над продуктом. Его основа -
    получение постоянной обратной связи с заказчиком и пользователями.
    Работа со Scrum сосредоточена внутри Бэклога - там список приоритезированных задач. На каждую задачу проводятся итерации.
    В каждую итерацию включается:
     - Планирование, где необходимые задачи разбиваются на меньшие и более контролируемые блоки.
     - Сформированный план спринта воплощается в жизнь командой
     - Определяется длительность каждого спринта (обычно это две недели).
     - Ежедневно проводится короткая встреча Scrum, где все участники делятся обновлениями, помогая оценить ход проекта.
     - После каждого спринта производится его обзор совместно с заинтересованными сторонами и владельцем продукта.

14. Что такое Velocity / Capacity?
    Velocity - ключевая метрика в методологиях Agile и Scrum, которая позволяет оценить производительность команды разработки. Она измеряется в 
    баллах и отображает объем работы, выполненную за итерацию
    
    Capacity - подсчитывается общее колличество часов, доступных команде. Затем User story с наивысшим приоритетом разбивается на задачи и каж-
    дое задание оценивается в колличестве часов

15. Преимущества и недостатки Scrum
    Преимущества:
     - залог оперативного и качественного выполнения задач
     - Грамотное использование времени и средств
     - Объемные проекты упаковываются в спринты, легкие для управления
     - Код разрабатывается и проверяется в ходе спринт-ревью
     - Scrum-совещания обеспечивают прозрачность работы команды
     - Личный вклад каждого участника команды очевиден на ежедневных Scrum-совещаниях.
     
     Недостатки:
      - Достижение высокого качества предполагает проведение тщательного процесса тестирования
      - Ежедневные встречи могут негативно сказаться на настроении команды
      - Эта методика даст ощутимые плоды только при наличии опытных членов команды
      - Scrum может вызвать затруднения при внедрении в крупных командах.
      - Scrum может подтолкнуть к расширению проекта из-за отсутствия жесткой даты окончания

16. Kanban - это способ управления пректом, который представлен в виде визуализации цели, задач и прогресса.  
    Рабочие задачи представлены карточками на Kanban‑доске и по мере выполнения перемещаются от одной стадии рабочего процесса к другой. Рабочий процесс получается непрерывным, при этом у команды есть определенная свобода действий и они могут расставлять приоритеты в зависимости от ситуации

17. Преимущества и недостатки Kanban?
    Преимущества:
     - Визуализация рабочего процесса. Карточки на доске помогают увидеть прогресс и проблемы в движении задач
     - Быстрая адартация команды. Принцип Kanban - постепенное улучшение существующих процессов. Сразу не нужно ничего менять, можно начать работу с тем, что есть. Поэтому у команды не будет простоя во время перестройки.
     - Много метрик, можно отследить на каком этапе тормозится процесс
     - Равномерное распределение нагрузок. Сразу видно когда в какой-то колонке много карточек, значит исполнителям нужна помощь или доп. время
     
    Недостатки:
     - Сложности с планированием. На начальном этапе внедрения Kanban сложно прогнозировать результаты. Без анализа метрик не получится рассчитать, сколько времени нужно команде на завершение задачи.
     -  Сложности в общении с заказчиками. Представителям бизнеса чаще всего нужны чёткие сроки завершения задач. Поэтому заказчики могут не понять прогнозов с вероятностью, которую рассчитывают на основе метрик и классов обслуживания

18. Что такое SDLS? Из каких этапов состоит? Что происходит на каждом этапе?
    SDLS(Software Development Life Cycle) Жизненный цикл разработки ПО - Процесс разработки ПО. метод заключающийся в том, чтобы ПО разработка внутри компании была поэтапной
    
    Этапы:
     - Requirements Analysis(Анализ требований). На этом этапе собираются требования для продукта(требования заказчика, пользователя)
     - Design (Проектирование и архитектура). Здесь определяются общие системные требования к разработке ПО(язык программирования, СУБД, железо)
     - Development (разработка).
     - Testing. Проверка продукта на соответствие ожиданиям пользователя, заказчика и регистрация ошибок
     - Evaluation(Этап оценки). Выдача продукта пользователям, заказчику
    
19. Что такое STLS? Из каких этапов состоит? Что происходит на каждом этапе?
    STLS(Software Testing Life Cycle) Жизненный цикл тестирования ПО - процесс тестирования, который включает в себя определенную последова-
    тельность шагов, чтобы гарантировать достижение целей в области качества
    
    Этапы:
     - Анализ требований. Один из важнейших этапов тестирования, так как на нем можно практически бесплатно исправить недостатки проекта. Здесь
     также определяется потребность в авто тестировании и проводить экономические расчеты затрат на рабочую силу. На этом этапе обсуждаются 
     критерии начала и окончания тестирования
     - Планирование тестирования. Подготовка стратегии тестирования, выбор инструментов тестирования, определение ролей и ответственностей
     - Этап создания тест-кейсов. На этом этапе происходит подготовка тестовых данных и создаются тест-кейсы
     - Настройка тестового окружения. Это настройка харда и софта, в которых будет осуществляться процесс тестирования. На этом этапе STLC настраиваются операционные системы и виртуальные машины, развертываются инструменты тестирования
     - Выполнение тестов. Тесты выполняются на основе готовой тестовой документации и правильно настроенной тестовой среды. Все результаты тестирования регистрируются в Системе управления тестированием. Отрицательно пройденные тесты, в которых фактический результат отличается от ожидаемого, регистрируются как ошибки и передаются команде разработчиков на доработку с последующей перепроверкой после исправления.
     - Завершение цикла испытаний. Окончательная генерация отчетов о тестировании для клиента. Они должны включать затраченное время, процент обнаруженных ошибок и положительных результатов тестирования, общее количество обнаруженных и исправленных ошибок.  



















