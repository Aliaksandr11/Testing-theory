1. Что такое функциональное тестирование (Functional/Behavioral testing)?
    Тестирование, при котором ПО проверяется на соответствие функциональным требованиям и спекам. Функциональные требования - это то, что заказ-
    чик ожидает от ПО. Поведение продукта то, что он умеет делать
    
    
2. Что такое нефункциональное тестирование (Non-Functional testing)?
   Нефункциональное тестирование проводится для проверки производительности, безопасности, надежности, UI, удобство пользования продуктом.
   Прверяется для того, чтобы выяснить как работает продукт
   

3. Какие виды тестирования относятся к функциональному тестированию?
    - Модульное тестирование (Unit Testing). Проверка работы отдельной функциональности.
    - Интеграционное тестирование. Проверка того, что модули работают корректно как группа
    - Системное тестирование. На этом этапе приложение или систему проверяют как одно целое и тестируют все компоненты в различных комбинациях.
      Цель - убедиться что система работает согласно тех. требованиям и без ошибок     
    - Регрессионное тестирование - проводится когда в приложение были внесены правки и идет проверка, что эти изменения несломали фукциональн.
    - Sanity тестирование - похоже на регрессионное, но при получении новой сборки с изменениями проверяется одна функциональность
    - Smoke-тестирование - проводится для того, чтобы убедиться, что наиболее критичный фукционал работает так как должен
    
    
4. Какие виды тестирования относятся к нефункциональному тестированию?
    - Тестирование производительности:
       a) Нагрузочное тестирование. Определяет, как программа работает под ожидаемой нагрузкой. Измерение времени выполнения операций, опреде-
          ление количества пользователей одновременно работающих с приложением
       b) Стрессовое тестирование. Определяет, как программа работает под максимальной нагрузкой.
       c) Тестирование стабильности. Определяет выдержит ли ПО длительную нагрузку. При этом на первое место выходит отсутствие утечек памяти, 
          перезапусков серверов под нагрузкой
       d) Объемное тестирование. Получение оценки производительности при увеличении объемов данных в базе данных. Измерение времени выполне-
          ния операций при определенной интенсивности, определение количества польз. одновременно работающих с приложением
    - Инсталяционное тестирование(тестирование установки). Проверяет, рне возникают ли проблемы при установке, удалении или обновлении ПО
    - Usability testing(тестирование удобства пользования). Направлен на установление степени удобства пользования, обучаемости, понятности и
      привлекательности для пользователя пользованием продукта. Сколько времени и шагов понадобится пользователю для выполнения основной задачи.
      Сколько ошибок сделал пользователь в работе с приложением
    - Тестирование GUI.
       a) Расположение, размер, цвет элементов. Возможность ввода букв или цифр
       b) Реализуется ли функционал, при помощи графических элементов
       c) Читабелен ли шрифт
       d) Качество изображений и видео
       e) Проверка отображения или расположения элементов при изменении разрешения экрана или изменения размера окна браузера
       f) Появляются ли тултипы. Проверка орфографии и пунктуации
       
           
5. Что такое Статическое/Динамическое тестирование?
   Статическое тестирование - это тип тестирования,при которм ПО проверяется без запуска кода. Кроме того он находит и устраняет ошибки в спеках
   2 типа:
    - Обзоры. Тестирование направленное на обнаружение дефектов в документации(требованиях, дизайн, тестовые случаи)
    - Статический анализ - созданный код программистами, который поддается анализу(переменные, синтаксис, бесконечные циклы)
   
   Динамическое тестирование - методика направленная на проверку функционала во время выполнения кода. Т.е фактическая эксплуатация программы с
   определением того соответствует ли фактический результат ожидаемому
   
   
6. Что такое Черный/Серый/Белый ящик тестирования(White/Black/Grey Box testing)?
   Black Box Testing - проверка, при которой тестировщик не имеет доступа к коду. Он как пользователь оценивает функции и работу программы,
   ориентируясь исключительно на интерфейс взаимодействия
   
   Grey Box Testing - промежуточный вариант между white и black box. В этом случае тестировщик может видеть чать кода или иметь доступ к внут-
   ренним настройка продукта. Однако проверка все равно при помощи програмного интерфейса
   
   White Box Testing - основывается на анализе кода продукта. Тестировщик знает как работает программа и какие функции выполняет каждый ее блок.
   Он занимается изучением програмного кода, созданием и внедрением проверок для него.
   

7. Что такое Компонентное(Component or Unit Testing) /Интеграционное (Integration Testing)
   Unit Testing - вид тестирования разработанных программ, при котором проверяются отдельные элементы процессов, кода, модулей
   
   Integration Testing - проверка того, как отдельные элементы процессов, модулей взаимодействуют друг с другом после их объединения
   
   
8. Системное (System Testing)/Приемочное тестирования (Acceptance Testing)?
   System Testing - тестирование всей системы в целом. Проверяет работает ли система целиком должным образом. Это тестирование оценивает работу
   системы с точки зрения польщователя с помощью документа спецификации
        - Функциональное Проверка функций системы, которые указаны в документации. 
        Пример: в документации указано: если пользователь не заполнил поле с телефоном, приложение должно выдать ошибку с конкретным текстом.
        Если система не даёт сохранить форму, но и не просит пользователя исправить ошибку, это считается за баг.
        - Внешние интерфейсы
        - Безопасность
        - Восстановление
        - Производительность
        - Возможность установки
        - Удобство использования
        - Нагрузка/стресс
   
   Acceptance Testing - формальное тестрование в отношении требований, потребностей, бизнес процессам с целью определения соответствия системы 
   критериям приемки и дать возможность пользователям, заказчикам определить принимать систему или нет
   
   
9. Что такое Позитивное/Негативное тестирование?
   Позитивное тестирование - проверка правильной работы системы при правильных условиях, чтобы выявить, что программа выполняет то, что от нее
   ожидают. Ввод корректных данных, выполнение стандартных действий пользователей
   
   Негативное тестирование - это проверка того как система обрабатывает неправильные условия или данные. Цель: выявить слабые места системы,
   которые могут привести к поломке. Ввод некорректных данных, попытки входа с недопустимыми данными
   
   
10. Что такое Альфа (Alpha Testing)/Бета тестирование(Beta Testing)?
    Alpha Testing - есть работающий продукт, но не до конца готовый, в нем реализована большая часть функций. Альфа тестирование помогает прове-
    рить его на наличие серьезных ошибок.
    Тестировщик получают тех задание, оно описывает user story и набор действий, которые надо воспроизвести. Обычно выполняется внутри проекта
    или ограниченное число пользователей
    
    Beta Testing - предварительная версия продукта, в котором основные функции приложения работают без ошибок, основные баги исправлены.
    Тестирование проводится самими пользователями на их же устройствах
    

11. Что такое Интуитивное/Исследовательское тестирование?
    Интуитивное(Ad-hoc) - метод тестирования ПО проводимое без какого-либо конкретного плана и без заранее определенных шагов. Вместо этого
    тестировщики исползуют свою интуицию, опыт и творческий подход
    
    Исследовательское тестирование - более вдумчивый подход к ad-hoc тестированию. Стратегия есть, просто не написана
    

12. Что такое Дымовые (Smoke)/Ре-тест (Re-test)/ Санити (Sanity)/Регрессионное (Regression) тестирование?
    Smoke testing - проверка основных функций ПО на наличие ошибок и стабильности системы
    
    Re-testing - проводится, когда какая-то фича или функциональность уже имела дефекты и это было исправлено
    
    Regression testing - повторное выполнение функциональных и нефункциональных тестов, для проверки работоспособности ПО после внесения изме-
    нений, доработок.
    
    Sanity testing - тестирование, достаточное для доказательства того, что конкретная функция работает в соответствии заявленным требованиям.
    Является подмножеством регрессионного тестирования. Используется для определения работоспособности ПО после внесения в него изменений
    

13. Что такое Тестирование нового функционала?
    Тестирование нового функционала - проверка нового добавленной функциональности на соответствие предъявленным требований
    

14. Что такое Ручное/Автоматизированное/Полуавтоматизированное тестирование?
    Ручное тестирование - проверка ПО вручную, без использования автоматизизированных инструментов. Тестировщик взаимодействует с программой как 
    обычный пользователь.
    
    Автоматизированное тестирование - часть тестирования ПО при помощи програмных средств для выполнения тестов и проверки результатов
    тестирования
    
    Полуавтоматизированное тестирование - ручное тестирование с частичным использованием средств автоматизации(ПО для контроля выполнения 
    тестов и проверка того, что фактический результат совпадает с ожидаемым)
    

15. На основании чего происходит разработка тестовых сценариев?
    В тестовом сценарии подробно расписана последовательность действий при помощи которых тестировщик проверяет ПО на работоспособность.
    Обычно тестовый сценарий описывает проверку одной конкретной функции: регистрации пользователя, заказа товара, загрузки фотографии.
     Разработка тестовых сценариев происходит но основе:
        - На основе требований
        - Целей(Проверка функциональности или поиск конкретных ошибок)
        - Описание шагов
        - Описание ожидаемого результата


16. Что такое Frontend / Backend?
    Frontend - клиентская часть продукта(интерфейс, с которым взаимодействует пользователь).  Отображается страница в нужном порядке и дизайне.
    Frontend отображает данные, которые отправляет Backend
    
    Backend - внутренняя часть продукта, которая находится на сервере. Сервер обрабатывает запрос и отправляет ответ на нужный комп
    

17. Что такое тестирование безопасности?
    Тестирование безопасности - тип тестирования, который выявляет уязвимости, угрозы и риски. Целью тестов безопасности является выявление
    всех возможных лазеек и слабых мест в ПО, которые могут привести к утечке информации, потери данных, денег, репутации компании, сотрудников.
    Попытки узнать пароль при помощи сторонних средств, перегрузка системы, просмотр несекретных данных с целью найти ключ для входа в систему
    
    
18. Перечислите Принципы безопасности программного обеспечения
     - Конфидециальность. Предотвращение несанкционированного доступа к информации или программы
     - Целостность. Предовращение изменения, искажения, повреждения информации или программ
     - Проверка подлинности(Аутентификация). Удостоверение субъекта в сети перед предоставлением доступа к данным
     - Проверка полномочий(Авторизация)
     - Доступность. Обеспечение доступности данных и информации
     - Подотчетность. Установление связи между пользователем и действием. Например оплата, подтверждение того, что отправитель послал а адресат
     получил


19. Перечислите виды уязвимостей в безопасности программного обеспечения
     - Уязвимости внедрения(SQL инъекции в коде или внедрения вредоносного скрипта в код на стороне клиента)
     - Уязвимости аутентификации и управления сеансами(Перебор паролей)
     - Уязвимости в неправильной обработке входных данных(Недостаточная проверка входных данных: Может привести к возможности выполнения 
     вредоносного кода)
     - Уязвимости конфиденциальности и утечки данных. Утечка информации: Недостаточные меры безопасности могут привести к утечке 
     конфиденциальной информации. Подделка авторизации: Злоумышленник может подделать авторизационные данные и получить доступ к 
     конфиденциальным данным. 
     - Уязвимости сетевого стека (Network Stack Vulnerabilities):
     Уязвимости протоколов: Недостатки в реализации сетевых протоколов могут привести к атакам, таким как отказ в обслуживании или перехват 
     данных.
     

20. Что такое Тестирование на отказ и восстановления Failover and Recovery Testing?
    Тестирование на отказ и восстановления - подвид тестирования производительности, который проверяет способность ПО противостоять и успешно 
    восстанавливаться после возможных сбоев, отказ оборудования, отсутствия сети. 
     - Проблемы с сетью;
     - Сбой питания;
     - Внешний сервер недоступен (External server not reachable);
     - Сервер не отвечает (Server not responding);
     - Отсутствует файл dll;
     - Перегрузка базы данных;
     - Остановленные сервисы/службы;
     - Физические условия;
     - Внешнее устройство не отвечает;
     - Потеря сигнала беспроводной сети;
    
    
21. Что такое тестирование Эффективности использования ресурсов?
     Это процесс проверки ПО на предмет того как оно использует системные ресурсы, такие как процессор, память, дисковое пространтсво и сетевую
     пропускную способность. Цель этого вида тестирования - определение возможных проблем в производительности ПО, которые могут возникнуть
     при его использовании и устранение их для оптимизации работы системы
     

22. Что такое тестирование Масштабируемости (Scalability testing)?
     Это проведение тестирования на возможность масштабируемости приложения с точки зрения пользовательской нагрузки, транзакций, объемы данных.
     Например обновить оборудование сервера, добавить ОЗУ или увеличить частоту ЦП. Или хранение текстовых файлов в базе данных


23. Что такое тестирование Производительности (Performance testing)?
     Такое тестирование проводится с целью определения того как быстро работает вычислительная система под определенной нагрузкой(скорость, 
     время отклика, стабильность, надежность, использование ресурсов)


24. Что такое тестирование Надежности(Reliability Testing)?
     Является одним из видов нефункционального тестирования, целью которого является проверка работоспособности приложения при длительном 
     тестировании с ожидаемым уровнем нагрузки. Смотрим за потреблением ресурсов, утечки памяти, скорость обработки данных и время отклика прил.


25. Что такое тестирование Стабильности (Stability Testing)?
     То же самое, что и тестирование надежности, только нагрузка будет значительно увеличена


26. Что такое тестирование Удобства использования(Usability testing)?
     Это тестирование с определением степени понятности, легкости в изучении и использовании, привлекательности ПО для пользователя. 


27. Что такое тестирование Локализации// Совместимости/ Адаптивности?
     Тестирпрование локализации - проверка содержимого приложения или сайта на соответствие лингвистическим, культурным требованиям, специфике
     конкретной стране(перевод, валюта, цвета, нормативы, единицы измерения, формат времени и даты)
     
     Тестирование совместимости - проверка того, как программа работает на разных операционных системах, платформах, окружениях и моб. устройст.
     (железо, по, версии по, ОС, сеть, браузеры, мобильные - совместимость Android, iOS )
     
     Тестирование адаптивности - процесс проверки того, как приложение или вебсайт корректно отображается на различных устройствах, разрешениях
     экрана и ориентации


28. Что такое ETL-тестирование/Тестирование перед миграцией (Pre-Migration testing)/Миграционное тестирование (Migration testing)/Тестирование
после миграции (Post-Migration testing)?
     ETL-тестирование(тестирование миграции данных)- это вид тестирования, выполняемый для гарантии того, что данные, перенесенные из исходной в
     целевую базу данных, являются точными и соответствуют действующим правилам преобразования
     
     Тестирование перед миграцией:
        - Установить четкий объем данных
        - Провести маппинг данных между легаси- и новым приложением. Для этого нужно сравнить типы данных в легаси-приложении с их типами в 
        новом приложении (высокоуровневый маппинг).
        - Если в новом приложении есть поля, обязательные для заполнения поля, а в легаси-приложении такого требования нет, нужно убедиться, что
        в легаси-приложении эти поля не являются нулевыми (низкоуровневый маппинг).
        - Записать количество таблиц в легаси-приложении и затем проверить, были ли какие-либо таблицы удалены или добавлены после миграции
        - Записать количество записей в каждой таблице в легаси-приложении и затем проверить обновленном приложении
        - Подготовить тест-кейсы и тестовые сценарии и использовать их в новом приложении.
        - Выполнить тест-кейсы и сценарии для части пользователей. Сохранить результаты и логи.
     
     Миграционное тестирование:
        - миграция начинается с резервного копирования данных
        - Фактическая миграция приложения
        - Брандмауэры, порты, хосты, аппаратные и программные конфигурации - все они изменяются в соответствии с новой системой, на которую
        переносится старая версия
        - Утечки данных, проверки безопасности
        - Проверяется связность между всеми компонентами приложения
     
     Тестирование после миграции:
        - Все устаревшие данные перенесены в новое приложение в течение запланированного времени простоя. Чтобы убедиться в этом, сравните
        количество записей между устаревшим и новым приложением для каждой таблицы и представлений в базе данных
        - Данные, перенесенные из устаревшего приложения в новое, должны сохранять свое значение и формат, если только это не указано отдельно.
        Чтобы убедиться в этом, сравните значения данных между устаревшей и новой базами данных приложения
        - Безопасность базы данных
        - Целостность данных для всех возможных записей выборки
        - Ранее поддерживаемые функции в устаревшей системе работают должным образом в новой системе
        - Интерфейс между компонентами должен быть тщательно протестирован, поскольку данные не должны изменяться, теряться и искажаться при
        прохождении через компоненты. Для проверки этого можно использовать интеграционные тестовые случаи
        - Избыточность устаревших данных. Никакие устаревшие данные не должны дублироваться во время миграции
        - Проведите тесты функциональности на различных выборках данных (разные возрастные группы, пользователи из разных регионов и т.д.)
        - Тестирование производительности важно для того, чтобы убедиться, что переход на новые системы/программное обеспечение не ухудшил 
        производительность системы
