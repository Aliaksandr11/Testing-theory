1. Требования - это что?
    Требования - утвержденные условия, которые должны быть выполнены для достижения определенных целей


2. Для чего нужен Анализ требований в разработке программного обеспечения?
    - Понимание ожиданий и потребностей пользователей
    - Определение границ и объема проекта
    - Выявление потенциальных рисков и проблеи
    - Улучшение коммуникации и сотрудничества
    - Создания основы для проектирования и тестирования
    

3. Перечислите Виды требований
    - Бизнес требования(цели организации)
    - Пользовательские требования(цели или задачи, которые пользователи должны иметь возможность выполнять с помощью ПО)
    - Функциональные
    - Нефункциональные


4. Перечислите Функциональные уровни требований
    - Бизнес требования
    - Пользовательские требования
    - Функциональные требования
    - Системные требования


5. Перечислите Нефункциональные уровни требований
    - Бизнес правила
    - Ограничения
    - Атрибуты качества
    - Требования к UI


6. Перечислите техники сбора требований
    - Интервью
    - Анкеты и опросы
    - Анализ документов
    - Создание прототипов
    - Анализ конкурентов
    - Use cases
    - Use stories


7. Что такое Спецификация требований программного обеспечения (SRS)?
    Это документ, который подробно описывает требования к разрабатываемой системе


8. Что такое Use Case?
    Это описание взаимодействий между пользователем и системой для достижения определенной цели
    

9. Приведите пример Use Case
    Регистрация пользователя:
    
    Основной поток:
    - Пользователь заполняет форму регистрации.
    - Пользователь отправляет форму.
    - Система проверяет введенные данные.
    - Система создает учетную запись.
    - Система отправляет пользователю подтверждение по электронной почте.
    
    Альтернативные потоки:
    Некорректные данные:
    - Пользователь заполняет форму регистрации некорректно.
    - Система выдает сообщение об ошибке.
    - Пользователь исправляет данные и повторно отправляет форму.
    Отмена регистрации:
    - Пользователь нажимает кнопку отмены.
    - Система возвращает пользователя на главную страницу без сохранения данных.


10. Перечислите Характеристики качества требований
     - Полнота(Требование должно содержать всю необходимую информацию для его реализации и проверки.)
     - Однозначность(Требование должно быть сформулировано так, чтобы его можно было понять только одним способом.)
     - Проверяемость(Требование должно быть сформулировано так, чтобы его выполнение можно было проверить тестами или другими методами.)
     - Осуществимость
     - Последовательнось(Требование не должно противоречить другим требованиям или стандартам.)
     - Атомарность(требование должно быть неделимым)
     - Модифицируемость
     - Понятность
    

11. Приведите пример к каждой Характеристике качества требований
     - Полнота(В требовании указаны все входные данные, выходные результаты и условия выполнения.)
     
     - Однозначность(Утверждение "Система должна быть быстрой" заменяется на "Система должна отвечать на запросы пользователя не более чем за 2 
     секунды".)
     
     - Проверяемость("Система должна поддерживать не менее 1000 одновременных пользователей" можно проверить нагрузочным тестированием.)
     
     - Осуществимость("Система должна быть разработана за 1 месяц" должно учитывать реальные возможности команды и технические ограничения.)
     
     - Последовательнось(Если одно требование указывает, что данные должны храниться в базе данных MySQL, другое требование не должно указывать 
     на использование базы данных PostgreSQL для тех же данных.)
     
     - Атомарность("Система должна предоставлять пользователям возможность регистрации и входа в систему" следует разделить на два отдельных 
     требования: "Система должна предоставлять возможность регистрации" и "Система должна предоставлять возможность входа в систему".)
     
     - Модифицируемость(Структура документа должна позволять легко вносить изменения и обновления требований.)
     
     - Понятность(Использование простого и ясного языка, избегание технического жаргона, если он не обязателен.)
     
     
12. Что такое Пользовательские истории(User story)?
     Это краткое и простое описание функциональности системы с точки зрения конечного пользователя
     

13. Приведите пример Пользовательских историй(User story)
     - Как покупатель я хочу добавлять товар в корзину, чтобы потом купить его
     - Как пользователь я хочу фильтровать продукты по категориям, чтобы быстрее находить нужный
     - Как пользователь я хочу зарегистрироваться в системе, чтобы получить доступ к ее функциональностям


14. Какие преимущества и недостатки Пользовательских историй(User story)?
    Преимущества:
     - Фокус на пользователе
     - Простота и понятность
     - Гибкость
     - Приоритезация
     
    Недостатки: 
     - Недостаток детализации
     - Неявные зависимости
     - Отсутствие формальной структуры
     - Риск упущения нефункциональных требований


15. Что такое Критерии приемки(Acceptance criteria)?
     Это условия, которым должен соответствовать программный продукт, чтобы быть принятым пользователем, клиентом


16. Перечислите виды и форматы критерий приемки
     Виды:
      - Функциональные
      - Нефункциональные
      - Бизнес 
      - Системные
      
    Форматы:
     - ориентированные на сценарий (шаблон Given/When/Then)(Он структурирует критерии приемки в виде предусловий, действий и ожидаемых 
     результатов.)
     - ориентированные на правила (шаблон чеклиста)
     - пользовательские форматы.


17. Приведите пример критерий приемки- список правил
    User story: Как новый пользователь, я хочу зарегистрироваться в системе, чтобы получить доступ к ее функциональности.
    Список правил:
     - Пользователь должен иметь возможность перейти на страницу регистрации.
     - Страница регистрации должна содержать поля для ввода имени, фамилии, адреса электронной почты и пароля.
     - Поля "Адрес электронной почты" и "Пароль" должны быть обязательными для заполнения.
     - Адрес электронной почты должен быть проверен на корректность формата (например, должен содержать символ "@").
     - Пароль должен содержать не менее 8 символов, включая хотя бы одну заглавную букву и одну цифру.
     - Если введенные данные некорректны, система должна отображать соответствующие сообщения об ошибках.
     - После успешного заполнения формы пользователь должен получить электронное письмо для подтверждения регистрации.
     - Письмо должно содержать уникальную ссылку для подтверждения регистрации.
     - Пользователь должен подтвердить свою регистрацию, перейдя по ссылке в электронном письме.
     - После подтверждения регистрации пользователь должен быть перенаправлен на страницу входа в систему.
     - Система должна уведомить пользователя об успешной регистрации.


18. Приведите пример критерий приемки- поведенческий сценарий
    User story: Как новый пользователь, я хочу зарегистрироваться в системе, чтобы получить доступ к ее функциональности.
    
    Сценарий: Регистрация нового пользователя
     Дано: Пользователь находится на главной странице
     Когда: Пользователь нажимает на кнопку "Регистрация"
     Тогда: Пользователь должен быть перенаправлен на страницу регистрации

    Сценарий: Заполнение формы регистрации
      Дано: Пользователь находится на странице регистрации
      Когда: Пользователь вводит имя, фамилию, адрес электронной почты и пароль
      И: Пользователь нажимает на кнопку "Зарегистрироваться"
      Тогда: Система должна проверить введенные данные

    Сценарий: Валидация данных регистрации
      Дано: Пользователь ввел некорректный адрес электронной почты
      Когда: Пользователь нажимает на кнопку "Зарегистрироваться"
      Тогда: Система должна показать сообщение об ошибке "Введите корректный адрес электронной почты"


19. Перечислите критерии INVEST для User story
     - Independent (Независимая)
     - Negotiable (Оговоренная):
     - Valuable (Ценная):
     - Estimable (Оценимая):
     - Small (Малая):
     - Testable (Тестируемая):


20. Назовите типы метрик тестирования. Каковы цели ввода метрик? Приведите примеры метрик.
    Типы метрик:
     - Метрики процессов(процент протестированных функций, модулей или строк кода)
     - Метрики продукта(количество дефектов на 1000 строк кода)
     - Метрики покрытия(процент кода, который был выполнен во время тестирования)
     - Метрики дефектов(бщее количество дефектов, найденных за определенный период)
     - Метрики производительности(среднее время, затраченное системой на обработку запроса.)
     - Метрики тестового покрытия(процент негативных сценариев, которые были протестированы.)
     
    Цели:
     - Измерение качества продукта
     - Оценка прогресса тестирования
     - Идентификация проблемных областей
     - Улучшение процесса тестирования


21. Что такое приемка приложения?
     Это процесс проверки того, что продукт соответствует определенным требованиям и готов к использованию пользователями или заказчиком


22. Что такое аудит приложения?
     Это процесс систематического и независимого обследования ПО и оценки ПО, его кода, производительности, безопасности и других аспектов с
     целью выявления недостатков


23. Этапы проведения аудита.
     - Планирование
     - Сбор данных
     - Сбор данных
     - Отчет о результатах
     - Рекоммендации и корректирующие действия
     - Последующее наблюдение
    

24. Чем приемка приложения отличается от аудита?
     Приемка ориентирована на удовлетворение требований и ожиданий заказчика или пользователей, а аудит фокусируется на независимой оценке 
     качества, безопасности и соответствия приложения стандартам.     
